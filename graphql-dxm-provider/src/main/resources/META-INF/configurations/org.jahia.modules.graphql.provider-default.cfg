#
# Config file for GraphQL dxm provider.
#

#
# List of permissions to be checked for specific GraphQL types and fields.
# Format is like: permission.{TYPE}.{FIELD} = {PERMISSION}
# Where:
#   {TYPE}:         is the GraphQL type ( ex: Query, JCRNode, GenericJCRNode, etc.. )
#                   Inheritance is possible between types ( ex: GenericJCRNode inherit of all JCRNode permission properties ),
#                   unless GenericJCRNode redefine permission properties for some specific fields.
#                   example of inheritance and override:
#
#                   permission.JCRNode.* = graphQlNodeReadPermission
#                   permission.GenericJCRNode.getSite = graphQlSiteReadPermission
#
#   {FIELD}:        is the GraphQL field from the previous type, wildcard is allowed if you want to restrict access
#                   to all the fields of a specific type. Combination of named field and wildcard is possible, a named field
#                   will always override the wildcard permission.
#                   For example, if we want to restrict all the Query type fields using one permission for all the fields, and
#                   a different permission for a specific field:
#
#                   permission.Query.* = graphQLQueryAccessPermission
#                   permission.Query.getNodesByPath = graphQLNodesByPathPermission
#
#   {PERMISSION}:   is the permission name that will be use to check the access to previously defined type and field(s)
#                   permissions are always checked on the root JCR node.

permission.JCRQuery.* = jcr:read